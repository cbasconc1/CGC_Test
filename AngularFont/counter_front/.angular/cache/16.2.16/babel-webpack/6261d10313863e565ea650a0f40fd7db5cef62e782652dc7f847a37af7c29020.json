{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CounterApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:9090/counter';\n  }\n  getValue() {\n    return this.http.get(this.baseUrl);\n  }\n  increment() {\n    return this.http.post(`${this.baseUrl}/increment`, {});\n  }\n  decrement() {\n    return this.http.post(`${this.baseUrl}/decrement`, {});\n  }\n  reset() {\n    return this.http.post(`${this.baseUrl}/reset`, {});\n  }\n  static {\n    this.ɵfac = function CounterApiService_Factory(t) {\n      return new (t || CounterApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CounterApiService,\n      factory: CounterApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["CounterApiService","constructor","http","baseUrl","getValue","get","increment","post","decrement","reset","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\cbasc\\Project\\project2\\restCounter\\AngularFont\\counter_front\\src\\app\\services\\counter-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface CounterResponse {\n  value: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CounterApiService {\n  private baseUrl = 'http://localhost:9090/counter';\n\n  constructor(private http: HttpClient) {}\n\n  getValue(): Observable<CounterResponse> {\n    return this.http.get<CounterResponse>(this.baseUrl);\n  }\n\n  increment(): Observable<CounterResponse> {\n    return this.http.post<CounterResponse>(`${this.baseUrl}/increment`, {});\n  }\n\n  decrement(): Observable<CounterResponse> {\n    return this.http.post<CounterResponse>(`${this.baseUrl}/decrement`, {});\n  }\n\n  reset(): Observable<void> {\n    return this.http.post<void>(`${this.baseUrl}/reset`, {});\n  }\n}\n"],"mappings":";;AAWA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,+BAA+B;EAEV;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAkB,IAAI,CAACF,OAAO,CAAC;EACrD;EAEAG,SAASA,CAAA;IACP,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAkB,GAAG,IAAI,CAACJ,OAAO,YAAY,EAAE,EAAE,CAAC;EACzE;EAEAK,SAASA,CAAA;IACP,OAAO,IAAI,CAACN,IAAI,CAACK,IAAI,CAAkB,GAAG,IAAI,CAACJ,OAAO,YAAY,EAAE,EAAE,CAAC;EACzE;EAEAM,KAAKA,CAAA;IACH,OAAO,IAAI,CAACP,IAAI,CAACK,IAAI,CAAO,GAAG,IAAI,CAACJ,OAAO,QAAQ,EAAE,EAAE,CAAC;EAC1D;;;uBAnBWH,iBAAiB,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAjBb,iBAAiB;MAAAc,OAAA,EAAjBd,iBAAiB,CAAAe,IAAA;MAAAC,UAAA,EAFhB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}